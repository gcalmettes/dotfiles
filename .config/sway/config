# Read `man 5 sway` for a complete reference.

####################################################################
# Variables
####################################################################

# Meta Key - Alt key is Mod1, and Logo key is Mod4
set $mod Mod4
set $alt Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term foot

# Application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $rofi_cmd rofi \
        -show-icons \
        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

####################################################################
# Output Configuration
####################################################################

# Default wallpaper
# Requires: desktop-backgrounds-compat, swaybg
output * bg ~/.config/sway/wallpapers/milkyway.png fill

####################################################################
# Idle Configuration
####################################################################
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

####################################################################
# Input Configuration
####################################################################

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * repeat_delay 300
input * repeat_rate 50

input * xkb_layout us
# right alt as compose key (use rctrl for right ctrl key)
input * xkb_options compose:ralt


input type:touchpad {
    tap enabled
    natural_scroll enabled
}


####################################################################
# Key Bindings
####################################################################

#
# Basics:
#
    # Launch // Terminal // <> Enter ##
    bindsym $mod+Return exec $term
    # Launch // Terminal in directory of currently focused windows, if any // <><Alt> Enter ##
    bindsym $mod+Alt+Return exec run-cwd $term

    ## Launch // Browser // <><Shift> Enter ##
    bindsym $mod+Shift+Return exec gtk-launch $(xdg-settings get default-web-browser)

    # Kill // Focused window // <><Shift> q ##
    bindsym $mod+Shift+q kill

    # Launch // Application launcher // <> d ##
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Kill // Exit sway (logs you out of your Wayland session) // <><Shift> e ##
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Screenlocking
    bindsym $mod+z  exec loginctl lock-session

#
# Moving around:
#
    ## Navigate // Move your focus around // <> ↑ ↓ ← → ##
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    ## Modify // Move the focused window with the same, but add Shift // <><Shift> ↑ ↓ ← → ##
    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

#
# Workspaces:
#

    ###############################################################################
    # Workspace Names
    # These are the labels which define each sway workspace.
    ###############################################################################

    # Note: workspaces can have any name you want, not just numbers.
    # We just use numbers as the default.

    set $ws1   "1"
    set $ws2   "2"
    set $ws3   "3"
    set $ws4   "4"
    set $ws5   "5"
    set $ws6   "6"
    set $ws7   "7"
    set $ws8   "8"
    set $ws9   "9"
    set $ws10  "10"
    set $ws11  "11"
    set $ws12  "12"
    set $ws13  "13"
    set $ws14  "14"
    set $ws15  "15"
    set $ws16  "16"
    set $ws17  "17"
    set $ws18  "18"
    set $ws19  "19"

    ###############################################################################
    # Workspace Keys
    # These are the keys which will be used while binding workspace switching
    ###############################################################################

    set $ws1_key   1
    set $ws2_key   2
    set $ws3_key   3
    set $ws4_key   4
    set $ws5_key   5
    set $ws6_key   6
    set $ws7_key   7
    set $ws8_key   8
    set $ws9_key   9
    set $ws10_key  0

    ## Navigate // Workspaces 1-10 // <> 0..9 ##
    bindsym $mod+$ws1_key workspace number $ws1
    bindsym $mod+$ws2_key workspace number $ws2
    bindsym $mod+$ws3_key workspace number $ws3
    bindsym $mod+$ws4_key workspace number $ws4
    bindsym $mod+$ws5_key workspace number $ws5
    bindsym $mod+$ws6_key workspace number $ws6
    bindsym $mod+$ws7_key workspace number $ws7
    bindsym $mod+$ws8_key workspace number $ws8
    bindsym $mod+$ws9_key workspace number $ws9
    bindsym $mod+$ws10_key workspace number $ws10

    ## Navigate // Workspace 11 - 19 // <><Ctrl> 1..9 ##
    bindsym $mod+Ctrl+$ws1_key workspace number $ws11
    bindsym $mod+Ctrl+$ws2_key workspace number $ws12
    bindsym $mod+Ctrl+$ws3_key workspace number $ws13
    bindsym $mod+Ctrl+$ws4_key workspace number $ws14
    bindsym $mod+Ctrl+$ws5_key workspace number $ws15
    bindsym $mod+Ctrl+$ws6_key workspace number $ws16
    bindsym $mod+Ctrl+$ws7_key workspace number $ws17
    bindsym $mod+Ctrl+$ws8_key workspace number $ws18
    bindsym $mod+Ctrl+$ws9_key workspace number $ws19

    ## Modify // Move focused container to Workspace 1 - 10 // <><Shift> 0..9 ##
    bindsym $mod+Shift+$ws1_key move container to workspace number $ws1
    bindsym $mod+Shift+$ws2_key move container to workspace number $ws2
    bindsym $mod+Shift+$ws3_key move container to workspace number $ws3
    bindsym $mod+Shift+$ws4_key move container to workspace number $ws4
    bindsym $mod+Shift+$ws5_key move container to workspace number $ws5
    bindsym $mod+Shift+$ws6_key move container to workspace number $ws6
    bindsym $mod+Shift+$ws7_key move container to workspace number $ws7
    bindsym $mod+Shift+$ws8_key move container to workspace number $ws8
    bindsym $mod+Shift+$ws9_key move container to workspace number $ws9
    bindsym $mod+Shift+$ws10_key move container to workspace number $ws10

    ## Modify // Move focused container to Workspace 11 - 19// <><Ctrl><Shift> 1..9 ##
    bindsym $mod+Shift+Ctrl+$ws1_key move container to workspace number $ws11
    bindsym $mod+Shift+Ctrl+$ws2_key move container to workspace number $ws12
    bindsym $mod+Shift+Ctrl+$ws3_key move container to workspace number $ws13
    bindsym $mod+Shift+Ctrl+$ws4_key move container to workspace number $ws14
    bindsym $mod+Shift+Ctrl+$ws5_key move container to workspace number $ws15
    bindsym $mod+Shift+Ctrl+$ws6_key move container to workspace number $ws16
    bindsym $mod+Shift+Ctrl+$ws7_key move container to workspace number $ws17
    bindsym $mod+Shift+Ctrl+$ws8_key move container to workspace number $ws18
    bindsym $mod+Shift+Ctrl+$ws9_key move container to workspace number $ws19


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


###############################################################################
# Extra
###############################################################################

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
include ${XDG_CONFIG_HOME:-$HOME/.config}/sway/decoration
